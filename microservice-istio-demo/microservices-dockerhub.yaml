apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: invoicing
    version: "1.0"
  name: invoicing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: invoicing
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: invoicing
    spec:
      containers:
      - name: invoicing
        image: docker.io/ewolff/microservice-istio-invoicing:1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: shipping
    version: "1.0"
  name: shipping
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shipping
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: shipping
    spec:
      containers:
      - name: shipping
        image: docker.io/ewolff/microservice-istio-shipping:1
        imagePullPolicy: IfNotPresent        
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: order    
    version: "1.0"
  name: order
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: order
    spec:
      containers:
      - name: order
        image: docker.io/ewolff/microservice-istio-order:1
        imagePullPolicy: IfNotPresent        
        ports:
        - containerPort: 8080
        resources: {}
status: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: invoicing
  name: invoicing
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    app: invoicing
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: shipping
  name: shipping
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    app: shipping
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: order
    visualize: "true"
  name: order
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
    name: http    
  selector:
    app: order
  type: NodePort
status:
  loadBalancer: {}

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: shipping
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /shipping/
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 80
        host: shipping.default.svc.cluster.local

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: invoicing
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /invoicing/
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 80
        host: invoicing.default.svc.cluster.local

---

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: order
spec:
  hosts:
  - "*"
  gateways:
  - microservice-gateway
  http:
  - match:
    - uri:
        prefix: /order/
    rewrite:
      uri: /
    route:
    - destination:
        port:
          number: 80
        host: order.default.svc.cluster.local
